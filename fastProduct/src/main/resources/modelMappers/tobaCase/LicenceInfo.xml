<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.frame.tobaCase.entity.LicenceInfo">
	<resultMap id="BaseResultMap" type="com.frame.tobaCase.entity.LicenceInfo">
		<id column="id" property="id" />
		<result column="per_respon" property="perRespon" />
		<result column="lic_no" property="licNo" />
		<result column="retail_code" property="retailCode" />
		<result column="biz_lic_no" property="bizLicNo" />
		<result column="issue_unit" property="issueUnit" />
		<result column="corp_name" property="corpName" />
		<result column="econ_natu" property="econNatu" />
		<result column="id_card" property="idCard" />
		<result column="premises" property="premises" />
		<result column="phone" property="phone" />
		<result column="biz_scope" property="bizScope" />
		<result column="opera_forms" property="operaForms" />
		<result column="site_attr" property="siteAttr" />
		<result column="spec_type" property="specType" />
		<result column="lic_status" property="licStatus" />
		<result column="retail_status" property="retailStatus" />
		<result column="cert_date" property="certDate" />
		<result column="effe_date" property="effeDate" />
		<result column="biz_lic_date" property="bizLicDate" />
		<result column="audi_dept" property="audiDept" />
		<result column="creator" property="creator" />
		<result column="created" property="created" />
		<result column="updator" property="updator" />
		<result column="updated" property="updated" />
	</resultMap>
	<!-- 表名 -->
	<sql id="tableNameSql">
		s_licence_info
	</sql>
	<sql id="Base_Column_List">
		id, per_respon, lic_no, retail_code, biz_lic_no,
		issue_unit, corp_name, econ_natu, id_card, premises,
		phone, biz_scope, opera_forms, site_attr, spec_type,
		lic_status, retail_status, cert_date, effe_date, biz_lic_date, audi_dept, 
		creator, created, updator, updated
	</sql>
	
	<sql id="condition">  <!-- 公共条件 -->
		WHERE 1=1
		<if test="condition.perRespon != null and condition.perRespon != ''"> AND per_respon LIKE CONCAT(CONCAT('%', #{condition.perRespon}),'%')</if>
		<if test="condition.licNo != null and condition.licNo != ''"> AND lic_no LIKE CONCAT(CONCAT('%', #{condition.licNo}),'%')</if>
		<if test="condition.bizLicNo != null and condition.bizLicNo != ''"> AND biz_lic_no LIKE CONCAT(CONCAT('%', #{condition.bizLicNo}),'%')</if>
		<if test="condition.corpName != null and condition.corpName != ''"> AND corp_name LIKE CONCAT(CONCAT('%', #{condition.corpName}),'%')</if>
	</sql>
	<select id="findByPage" resultType="hashMap"
		parameterType="com.frame.core.commons.result.DateTablesResult">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		<include refid="tableNameSql" />
		<include refid="condition" />
		GROUP BY id 
		<if test="condition.iSortCol_0==1">
			ORDER BY per_respon ${condition.sSortDir_0}
		</if>
		<if test="condition.iSortCol_0==2">
			ORDER BY lic_no ${condition.sSortDir_0}
		</if>
		<if test="condition.iSortCol_0==3">
			ORDER BY biz_lic_no ${condition.sSortDir_0}
		</if>
		<if test="condition.iSortCol_0==4">
			ORDER BY corp_name ${condition.sSortDir_0}
		</if>
		<if test="condition.iSortCol_0==5">
			ORDER BY phone ${condition.sSortDir_0}
		</if>
		<if test="condition.iSortCol_0==6">
			ORDER BY lic_status ${condition.sSortDir_0}
		</if>
		<if test="condition.iSortCol_0==7">
			ORDER BY retail_status ${condition.sSortDir_0}
		</if>
		<if test="condition.iSortCol_0==8">
			ORDER BY cert_date ${condition.sSortDir_0}
		</if>
		LIMIT ${start},${length}
	</select>

	<select id="findAllTotal" parameterType="com.frame.core.commons.result.DateTablesResult" resultType="int">
		SELECT count(id) FROM 
		<include refid="tableNameSql" />
		<include refid="condition" />
	</select>

	<select id="findById" parameterType="String" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		<include refid="tableNameSql" />
		WHERE
		id = #{id}
	</select>
	<select id="findAll" parameterType="com.frame.tobaCase.entity.LicenceInfo" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" /> FROM
		<include refid="tableNameSql" />
		WHERE 1=1
		<if test="perRespon != null and perRespon != ''"> AND per_respon LIKE CONCAT(CONCAT('%', #{perRespon}),'%')</if>
		<if test="licNo != null and licNo != ''"> AND lic_no LIKE CONCAT(CONCAT('%', #{licNo}),'%')</if>
		<if test="bizLicNo != null and bizLicNo != ''"> AND biz_lic_no LIKE CONCAT(CONCAT('%', #{bizLicNo}),'%')</if>
		<if test="corpName != null and corpName != ''"> AND corp_name LIKE CONCAT(CONCAT('%', #{corpName}),'%')</if>
	</select>
	<select id="findByIds" resultMap="BaseResultMap">
		SELECT 
			<include refid="Base_Column_List" />
		FROM
			<include refid="tableNameSql" />
		WHERE 
			id IN <foreach collection="ids" item="id" open="(" separator="," close=")">#{id}</foreach>
	</select>
	<!-- 根据许可证查询数量 -->
	<select id="findBylicNoOutCount" parameterType="String" resultType="Integer">
		SELECT 
			COUNT(id)
		FROM
			<include refid="tableNameSql" />
		WHERE
			lic_no = #{licNo}
	</select>
	<!-- 根据许可证查询一条记录 -->
	<select id="findBylicNoOutObject" parameterType="String" resultMap="BaseResultMap">
		SELECT 
			id
		FROM
			<include refid="tableNameSql" />
		WHERE
			lic_no = #{licNo} LIMIT 1
	</select>
	<!-- 根据人名进行模糊查询 -->
	<select id="findPerRespon" parameterType="String" resultType="String">
		SELECT 
			CONCAT(
				per_respon, '(', lic_no, ')'
			) AS perRespon
		FROM
			<include refid="tableNameSql" />
		WHERE 
			per_respon LIKE CONCAT(CONCAT('%', #{perRespon}),'%')
	</select>
	<!-- 新增 -->
	<insert id="save" parameterType="com.frame.tobaCase.entity.LicenceInfo">
		INSERT INTO
		<include refid="tableNameSql" />
		(
		<include refid="Base_Column_List" />
		)
		VALUES (
		#{id},#{perRespon},#{licNo},#{retailCode},#{bizLicNo},#{issueUnit},#{corpName},#{econNatu},#{idCard},#{premises},
		#{phone},#{bizScope},#{operaForms},#{siteAttr},#{specType},#{licStatus},#{retailStatus},#{certDate},
		#{effeDate},#{bizLicDate},#{audiDept},#{creator},#{created},#{updator},#{updated}
		)
	</insert>
	<!-- 修改 -->
	<update id="update" parameterType="com.frame.tobaCase.entity.LicenceInfo">
		UPDATE
		<include refid="tableNameSql" />
		SET
		per_respon = #{perRespon},
		lic_no = #{licNo},
		retail_code =
		#{retailCode},
		biz_lic_no = #{bizLicNo},
		issue_unit = #{issueUnit},
		corp_name = #{corpName},
		econ_natu = #{econNatu},
		id_card = #{idCard},
		premises = #{premises},
		phone = #{phone},
		biz_scope = #{bizScope},
		opera_forms = #{operaForms},
		site_attr = #{siteAttr},
		spec_type =
		#{specType},
		lic_status = #{licStatus},
		retail_status = #{retailStatus},
		cert_date = #{certDate},
		effe_date = #{effeDate},
		biz_lic_date =
		#{bizLicDate},
		audi_dept = #{audiDept}
		WHERE
		id = #{id}
	</update>
	
	<!-- 删除 -->
	<delete id="removeByIds" parameterType="String">
		DELETE FROM <include refid="tableNameSql" />
		WHERE id IN
		<foreach collection="ids" item = "ids" open="(" separator="," close=")">#{ ids}</foreach> 	
	</delete>
	
	<insert id="saveImport" parameterType="com.frame.tobaCase.entity.LicenceInfo">
		INSERT INTO <include refid="tableNameSql" />
		(<include refid="Base_Column_List" />) VALUES(
		#{id},#{perRespon},#{licNo},#{retailCode},#{bizLicNo},#{issueUnit},#{corpName},#{econNatu},#{idCard},#{premises},
		#{phone},#{bizScope},#{operaForms},#{siteAttr},#{specType},#{licStatus},#{retailStatus},#{certDate},
		#{effeDate},#{bizLicDate},#{audiDept},#{creator},#{created},#{updator},#{updated})
		ON DUPLICATE KEY UPDATE
		id=#{id},
		per_respon = #{perRespon},
		retail_code =#{retailCode},
		biz_lic_no = #{bizLicNo},
		issue_unit = #{issueUnit},
		corp_name = #{corpName},
		econ_natu = #{econNatu},
		id_card = #{idCard},
		premises = #{premises},
		phone = #{phone},
		biz_scope = #{bizScope},
		opera_forms = #{operaForms},
		site_attr = #{siteAttr},
		spec_type =#{specType},
		lic_status = #{licStatus},
		retail_status = #{retailStatus},
		cert_date = #{certDate},
		effe_date = #{effeDate},
		biz_lic_date =#{bizLicDate},
		audi_dept = #{audiDept}
	</insert>
</mapper>