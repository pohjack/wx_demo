<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>

	<!--安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义Realm -->
		<property name="realm" ref="shiroDbRealm" />
		<!--将缓存管理器，交给安全管理器 -->
		<property name="cacheManager" ref="shiroEhcacheManager" />
	</bean>

	<!-- 項目自定义的Realm -->
	<bean id="shiroDbRealm" class="com.frame.core.commons.shiro.ShiroDbRealm" />

	<!-- shiro为集成springMvc 拦截异常 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 这里可以根据需要定义多个错误异常转发 -->
				<prop key="org.apache.shiro.authz.AuthorizationException">redirect:/unauth</prop><!-- 授权失败，用户无权限时跳转的方法 -->
				<prop key="org.apache.shiro.authz.UnauthenticatedException">redirect:/unauth</prop>
				<prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/unauth</prop>
			</props>
		</property>
	</bean>
	
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 默认的登陆访问url -->
		<property name="loginUrl" value="/login" />
		<!-- 登陆成功后跳转的url -->
		<property name="successUrl" value="/index" />
		<!-- 没有权限跳转的url -->
		<property name="unauthorizedUrl" value="/unauth" />
		<property name="filterChainDefinitions">
			<value>
			<!-- shiro验证url权限，单独配置单独验证，默认调用org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter验证 -->
			<!-- perms，拦截器名称，可以自定义拦截器 -->
			/webmaster/sys/role/* = perms[role:view]
			/webmaster/sys/user/toList = perms[user:edit]
			/webmaster/sys/area/toList = perms[user:edit]
			/webmaster/sys/organization/toList = perms[user:edit]
			/webmaster/dictData/toList = perms[user:edit]
			/webmaster/licenceInfo/toList = perms[user:edit]
			/webmaster/cigarInfo/toList = perms[user:edit]
			/webmaster/law/toList = perms[user:edit]
			/webmaster/sys/organization/doRemove = perms[organization:remove]
				/webmaster/** = authc 
				/public/** = authc
				/template/** = authc
				/docTemplate/** = authc	
				/validateCode = authc			
				<!-- 不需要认证 -->
				/static/** = anon
				/doLogin = anon
				/login = anon
				/appServer = anon 
				<!--需要认证 -->
				
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml" />
	</bean>

	<!-- 在方法中 注入 securityManager ，进行代理控制 -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" >
			<property name="proxyTargetClass" value="true" />
		</bean>

	<!-- 启用shrio授权注解拦截方式 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
</beans>